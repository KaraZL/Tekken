trigger:
- secure

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Test
    jobs:
      - job: UnitTests
        continueOnError: false
        steps:
          - task: DotNetCoreCLI@2
            inputs:
              command: 'test'
              projects: '*tests/*Unit/*.csproj'

      - job: IntegrationTests
        continueOnError: false
        steps:
          - task: DotNetCoreCLI@2
            inputs:
              command: 'test'
              projects: '*tests/*Integration/*.csproj'

  - stage: Terraform
    jobs:
      - job: Installer
        continueOnError: true
        steps:
          - task: TerraformInstaller@0
            displayName: Install Terraform
            inputs:
              terraformVersion: 'latest'
          
          - task: TerraformCLI@0
            displayName: Init Terraform
            inputs:
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
              backendType: 'azurerm'
              backendServiceArm: 'terraform-aks-azurerm'
              backendAzureRmResourceGroupName: 'terraform-storage-rg'
              backendAzureRmStorageAccountName: 'tekkenterraformstorage'
              backendAzureRmContainerName: 'tfstatefiles'
              backendAzureRmKey: 'terraform.tfstate'
              allowTelemetryCollection: true
          - task: TerraformCLI@0
            displayName: Validate Terraform
            inputs:
              command: 'validate'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
              allowTelemetryCollection: true
        
      - job: Deploy
        continueOnError: true
        steps:
         - task: TerraformCLI@0
           inputs:
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
              environmentServiceName: 'terraform-aks-azurerm'
              runAzLogin: true
              allowTelemetryCollection: true
      
      - job: Remove
        continueOnError: true
        steps:
          - task: TerraformCLI@0
            inputs:
              command: 'destroy'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
              environmentServiceName: 'terraform-aks-azurerm'
              runAzLogin: true
              allowTelemetryCollection: true